entries:
  convo:
    ############################################################################
    ###############################     0     ##################################
    ############################################################################
    0: 
      Q:
        role: 'user'
        content: |
          There are 3 blocks on the table, two boxes and one more elongated for the arch. Our goal is to create an arch
          with these blocks by first constructing the two pillars and then placing the architrave on top of them. The 
          position available are as follows:
          - a: (1, 1, 0)
          - b: (2, 2, 0)
          - c: (3, 4, 0)
          - d: (5, 5, 0)
          - e: (9, 9, 0)
          - f: (1.5, 1.5, 0)
          Initially, the blocks are free and the agents are available. Moreover, one block is in position c, another is 
          in position d and the architrave is in position e.
          We want to construct the first pillar on a, the second pillar on b and the arch on top of them. 
          There are two agents that can carry out this task, namely a1 and a2. They are free both at the beginning and at the end.
          Can you provide the general knowledge base and specify the resources available?

      A:
        role: 'assistant'
        content: |
          Sure. The description states that we have 3 blocks, of which two are boxes and one is elongated for the arch.
          To express the difference, we use `block(B)` for the blocks and `arch(A)` for the architrave.
          The description also tells us that there are two agents, `a1` and `a2`, that can carry out the task.
          Moreover, we have a list of positions available for the blocks, which will be expressed using the `pos`
          predicate. Finally, the only resource that we have that can accomplish tasks is the agents, so we will use 
          the predicate `resource(agent(_))` to express this.
          ```kb
          :- discontiguous resources/1.
          
          % blocks
          block(block1).
          block(block2).
          arch(arch1).

          % agents
          agent(a1).
          agent(a2).

          % positions
          pos(a, 1, 1, 0).
          pos(b, 2, 2, 0).
          pos(c, 3, 4, 0).
          pos(d, 5, 5, 0).
          pos(e, 9, 9, 0).
          pos(f, 1.5, 1.5, 0).

          % resources
          resource(agent(_)).
          ```

