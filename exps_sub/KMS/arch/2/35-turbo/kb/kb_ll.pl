% This file was automatically generated by the LLM system
%%%%%%%%%%%%%%%%%%%%%%%
% kb
%%%%%%%%%%%%%%%%%%%%%%%
% Positions
pos(1,1).
pos(2,2).
pos(3,3).
pos(6,6).
pos(9,6).

% Blocks
block(b1).
block(b2).
block(b3).

% Dimensions
dimension(b1, 1, 1, 1).
dimension(b2, 1, 1, 1).
dimension(b3, 1, 1, 3).

% Agents
agent(robotic_arm).

% Low-level predicates
ll_arm_at(robotic_arm, 4, 4).
ll_arm_at(robotic_arm, 5, 5).
ll_gripper(robotic_arm, open).

% Resources
resources(agent(robotic_arm)).

%%%%%%%%%%%%%%%%%%%%%%%
% init
%%%%%%%%%%%%%%%%%%%%%%%
init_state([
  ll_arm_at(robotic_arm, 4, 4),
  ll_arm_at(robotic_arm, 5, 5),
  ll_gripper(robotic_arm, open),
  ll_block_at(b1, 1, 1),
  ll_block_at(b2, 2, 2),
  ll_block_at(b3, 3, 3),
  ll_clear(b1),
  ll_clear(b2),
  ll_clear(b3),
  ll_ontable(b1),
  ll_ontable(b2),
  ll_ontable(b3),
  ll_available(robotic_arm)
]).

%%%%%%%%%%%%%%%%%%%%%%%
% goal
%%%%%%%%%%%%%%%%%%%%%%%
goal_state([
  ll_block_at(b1, 6, 6),
  ll_block_at(b2, 9, 6),
  ll_block_at(b3, 7, 6),
  ll_clear(b1),
  ll_clear(b2),
  ll_clear(b3),
  ll_ontable(b1),
  ll_ontable(b2),
  ll_ontable(b3),
  ll_on(b3, b1),
  ll_on(b3, b2),
  ll_available(robotic_arm)
]).

%%%%%%%%%%%%%%%%%%%%%%%
% actions
%%%%%%%%%%%%%%%%%%%%%%%
% Move a block from a position on the table to another position on the table
action(move_table_to_table_start(robotic_arm, Block, X1, Y1, X2, Y2),
  [available(robotic_arm), ontable(Block), at(Block, X1, Y1), clear(Block)],
  [at(_, X2, Y2), on(_, Block), moving_table_to_table(_, Block, _, _, _, _), moving_table_to_block(_, Block, _, _, _, _, _)],
  [],
  [agent(robotic_arm), pos(X1, Y1), pos(X2, Y2), block(Block)],
  [
    del(available(robotic_arm)), del(clear(Block)), del(ontable(Block)), del(at(Block, X1, Y1)),
    add(moving_table_to_table(robotic_arm, Block, X1, Y1, X2, Y2))
  ]
).
action(move_table_to_table_end(robotic_arm, Block, X1, Y1, X2, Y2),
  [moving_table_to_table(robotic_arm, Block, X1, Y1, X2, Y2)],
  [at(X2, Y2)],
  [],
  [agent(robotic_arm)],
  [
    del(moving_table_to_table(robotic_arm, Block, X1, Y1, X2, Y2)),
    add(at(Block, X2, Y2)), add(clear(Block)), add(available(robotic_arm))
  ]
).

% Move a block from a position on the table to the top of another block
action(move_table_to_block_start(robotic_arm, Block1, Block2, X1, Y1, X2, Y2),
  [available(robotic_arm), ontable(Block1), at(Block1, X1, Y1), at(Block2, X2, Y2), clear(Block2)],
  [on(_, Block1), on(Block1, _), moving_table_to_table(_, Block, _, _, _, _), moving_table_to_block(_, Block, _, _, _, _, _)],
  [],
  [agent(robotic_arm), pos(X1, Y1), pos(X2, Y2), block(Block1), block(Block2), Block1 \= Block2],
  [
    del(available(robotic_arm)), del(clear(Block1)), del(ontable(Block1)), del(at(Block1, X1, Y1)),
    add(moving_table_to_block(robotic_arm, Block1, Block2, X1, Y1, X2, Y2))
  ]
).
action(move_table_to_block_end(robotic_arm, Block1, Block2, X1, Y1, X2, Y2),
  [moving_table_to_block(robotic_arm, Block1, Block2, X1, Y1, X2, Y2), clear(Block2)],
  [],
  [],
  [agent(robotic_arm)],
  [
    del(clear(Block2)), del(moving_table_to_block(robotic_arm, Block1, Block2, X1, Y1, X2, Y2)),
    add(on(Block1, Block2)), add(at(Block1, X2, Y2)), add(clear(Block1)), add(available(robotic_arm))
  ]
).

% Move a block from the top of another block to a position on the table
action(move_block_to_table_start(robotic_arm, Block1, Block2, X1, Y1, X2, Y2),
  [available(robotic_arm), on(Block1, Block2), at(Block1, X1, Y1), at(Block2, X1, Y1), clear(Block1)],
  [moving_block_to_table(_, Block1, _, _, _, _), on(_, Block1), ontable(Block1)],
  [],
  [agent(robotic_arm), pos(X1, Y1), pos(X2, Y2), block(Block1), block(Block2), Block1 \= Block2],
  [
    del(available(robotic_arm)), del(clear(Block1)), del(on(Block1, Block2)), del(at(Block1, X1, Y1)),
    add(moving_block_to_table(robotic_arm, Block1, X1, Y1, X2, Y2))
  ]
).
action(move_block_to_table_end(robotic_arm, Block1, Block2, X1, Y1, X2, Y2),
  [moving_block_to_table(robotic_arm, Block1, X1, Y1, X2, Y2)],
  [at(X2, Y2)],
  [],
  [agent(robotic_arm)],
  [
    del(moving_block_to_table(robotic_arm, Block1, X1, Y1, X2, Y2)),
    add(ontable(Block1)), add(at(Block1, X2, Y2)), add(clear(Block1)), add(available(robotic_arm))
  ]
).

% Move a block from the top of another block to the top of another block
action(move_block_to_block_start(robotic_arm, Block1, Block2, Block3, X1, Y1, X2, Y2),
  [available(robotic_arm), on(Block1, Block2), at(Block1, X1, Y1), at(Block2, X1, Y1), clear(Block1)],
  [moving_block_to_table(_, Block1, _, _, _, _), on(_, Block1), ontable(Block1)],
  [],
  [agent(robotic_arm), pos(X1, Y1), pos(X2, Y2), block(Block1), block(Block2), block(Block3), Block1 \= Block2, Block1 \= Block3, Block2 \= Block3],
  [
    del(available(robotic_arm)), del(clear(Block1)), del(on(Block1, Block2)), del(at(Block1, X1, Y1)),
    add(moving_block_to_block(robotic_arm, Block1, Block2, Block3, X1, Y1, X2, Y2))
  ]
).
action(move_block_to_block_end(robotic_arm, Block1, Block2, Block3, X1, Y1, X2, Y2),
  [moving_block_to_block(robotic_arm, Block1, Block2, Block3, X1, Y1, X2, Y2)],
  [clear(Block3)],
  [],
  [agent(robotic_arm)],
  [
    del(clear(Block3)), del(moving_block_to_block(robotic_arm, Block1, Block2, Block3, X1, Y1, X2, Y2)),
    add(on(Block1, Block3)), add(at(Block1, X2, Y2)), add(clear(Block1)), add(available(robotic_arm))
  ]
).

% Place the last block on top as an architrave
action(place_architrave_start(robotic_arm, Block1, Block2, Block3, X1, Y1, X2, Y2),
  [available(robotic_arm), on(Block1, Block2), on(Block3, Block2), at(Block1, X1, Y1), at(Block2, X1, Y1), at(Block3, X1, Y1), clear(Block1)],
  [moving_block_to_table(_, Block1, _, _, _, _), on(_, Block1), ontable(Block1)],
  [ontable(Block3)],
  [agent(robotic_arm), pos(X1, Y1), pos(X2, Y2), block(Block1), block(Block2), block(Block3), Block1 \= Block2, Block1 \= Block3, Block2 \= Block3],
  [
    del(available(robotic_arm)), del(clear(Block1)), del(on(Block1, Block2)), del(at(Block1, X1, Y1)),
    add(moving_block_to_block(robotic_arm, Block1, Block2, Block3, X1, Y1, X2, Y2))
  ]
).
action(place_architrave_end(robotic_arm, Block1, Block2, Block3, X1, Y1, X2, Y2),
  [moving_block_to_block(robotic_arm, Block1, Block2, Block3, X1, Y1, X2, Y2)],
  [],
  [],
  [agent(robotic_arm)],
  [
    del(moving_block_to_block(robotic_arm, Block1, Block2, Block3, X1, Y1, X2, Y2)),
    add(on(Block1, Block3)), add(at(Block1, X2, Y2)), add(clear(Block1)), add(available(robotic_arm))
  ]
).


%%%%%%%%%%%%%%%%%%%%%%%
% ll_actions
%%%%%%%%%%%%%%%%%%%%%%%
ll_action(move_arm_start(robotic_arm, X1, Y1, X2, Y2),
  [ll_arm_at(robotic_arm, X1, Y1)],
  [moving_arm(robotic_arm, _, _, _, _, _, _), gripping(robotic_arm, _), releasing(robotic_arm)],
  [],
  [ll_arm(robotic_arm), pos(X1, Y1), pos(X2, Y2)],
  [
    add(moving_arm(robotic_arm, X1, Y1, X2, Y2)),
    del(ll_arm_at(robotic_arm, X1, Y1))
  ]
).

ll_action(move_arm_end(robotic_arm, X1, Y1, X2, Y2),
  [moving_arm(robotic_arm, X1, Y1, X2, Y2)],
  [],
  [],
  [],
  [
    del(moving_arm(robotic_arm, X1, Y1, X2, Y2)),
    add(ll_arm_at(robotic_arm, X2, Y2))
  ]
).

ll_action(close_gripper_start(robotic_arm),
  [ll_gripper(robotic_arm, open)],
  [moving_arm(robotic_arm, _, _, _, _, _, _), gripping(robotic_arm, _), releasing(robotic_arm), gripped(robotic_arm)],
  [],
  [ll_gripper(robotic_arm)],
  [
    del(ll_gripper(robotic_arm, open)),
    add(gripping(robotic_arm, _))
  ]
).

ll_action(close_gripper_end(robotic_arm),
  [gripping(robotic_arm, _)],
  [],
  [],
  [ll_gripper(robotic_arm)],
  [
    del(gripping(robotic_arm, _)),
    add(gripped(robotic_arm)), add(ll_gripper(robotic_arm, close))
  ]
).

ll_action(open_gripper_start(robotic_arm),
  [gripped(robotic_arm)],
  [moving_arm(robotic_arm, _, _, _, _, _, _), gripping(robotic_arm, _), releasing(robotic_arm)],
  [],
  [ll_gripper(robotic_arm)],
  [
    del(gripped(robotic_arm)), del(ll_gripper(robotic_arm, close)),
    add(releasing(robotic_arm))
  ]
).

ll_action(open_gripper_end(robotic_arm),
  [releasing(robotic_arm)],
  [],
  [],
  [ll_gripper(robotic_arm)],
  [
    del(releasing(robotic_arm)),
    add(ll_gripper(robotic_arm, open))
  ]
).

%%%%%%%%%%%%%%%%%%%%%%%
% mappings
%%%%%%%%%%%%%%%%%%%%%%%
mapping(move_table_to_table_start(robotic_arm, Block, X1, Y1, X2, Y2),
  [
    move_arm_start(robotic_arm, X1, Y1, X2, Y2),
    move_arm_end(robotic_arm, X1, Y1, X2, Y2)
  ]
).

mapping(move_table_to_block_start(robotic_arm, Block1, Block2, X1, Y1, X2, Y2),
  [
    move_arm_start(robotic_arm, X1, Y1, X2, Y2),
    move_arm_end(robotic_arm, X1, Y1, X2, Y2)
  ]
).

mapping(move_block_to_table_start(robotic_arm, Block1, Block2, X1, Y1, X2, Y2),
  [
    move_arm_start(robotic_arm, X1, Y1, X2, Y2),
    move_arm_end(robotic_arm, X1, Y1, X2, Y2)
  ]
).

mapping(move_block_to_block_start(robotic_arm, Block1, Block2, Block3, X1, Y1, X2, Y2),
  [
    move_arm_start(robotic_arm, X1, Y1, X2, Y2),
    move_arm_end(robotic_arm, X1, Y1, X2, Y2)
  ]
).

mapping(place_architrave_start(robotic_arm, Block1, Block2, Block3, X1, Y1, X2, Y2),
  [
    move_arm_start(robotic_arm, X1, Y1, X2, Y2),
    move_arm_end(robotic_arm, X1, Y1, X2, Y2)
  ]
).
