% This file was automatically generated by the LLM system
%%%%%%%%%%%%%%%%%%%%%%%
% kb
%%%%%%%%%%%%%%%%%%%%%%%
% Positions
pos(1,1).
pos(2,3).
pos(3,4).
pos(5,5).

% Blocks
block(b1).
block(b2).
block(b3).

% Agents
agent(a1).

% Low-level predicates
ll_arm(a1).

% Resources
resources(agent(_)).
resources(ll_arm(_)).

%%%%%%%%%%%%%%%%%%%%%%%
% init
%%%%%%%%%%%%%%%%%%%%%%%
init_state([
  ontable(b1), ontable(b2), ontable(b3),
  at(b1,1,1), at(b2,2,3), at(b3,3,4),
  clear(b1), clear(b2), clear(b3),
  available(a1),
  ll_arm_at(a1,10,10),
  ll_gripper(a1,open)
]).

%%%%%%%%%%%%%%%%%%%%%%%
% goal
%%%%%%%%%%%%%%%%%%%%%%%
goal_state([
  ontable(b1), ontable(b2), ontable(b3),
  on(b2, b1), on(b3, b2),
  at(b1,5,5), at(b2,5,5), at(b3,5,5),
  clear(b1), clear(b2), clear(b3),
  available(a1),
  ll_arm_at(a1,_,_),
  ll_gripper(a1,_)
]).

%%%%%%%%%%%%%%%%%%%%%%%
% actions
%%%%%%%%%%%%%%%%%%%%%%%
% Move a block from a position on the table to another position on the table
action(move_table_to_table_start(Agent, Block, X1, Y1, X2, Y2),
  [ontable(Block), at(Block, X1, Y1), available(Agent), clear(Block)],
  [at(_, X2, Y2), on(Block, _), moving_table_to_table(_, Block, _, _, _, _), moving_table_to_block(_, Block, _, _, _, _, _)],
  [],
  [agent(Agent), pos(X1, Y1), pos(X2, Y2), block(Block)],
  [
    del(available(Agent)), del(clear(Block)), del(ontable(Block)), del(at(Block, X1, Y1)),
    add(moving_table_to_table(Agent, Block, X1, Y1, X2, Y2))
  ]
).
action(move_table_to_table_end(Agent, Block, X1, Y1, X2, Y2),
  [moving_table_to_table(Agent, Block, X1, Y1, X2, Y2)],
  [at(X2, Y2)],
  [],
  [agent(Agent)],
  [
    del(moving_table_to_table(Agent, Block, X1, Y1, X2, Y2)),
    add(ontable(Block)), add(at(Block, X2, Y2)), add(clear(Block)), add(available(Agent))
  ]
).

% Move a block that is on the table to the top of another block
action(move_table_to_block_start(Agent, Block1, Block2, X1, Y1, X2, Y2),
  [ontable(Block1), at(Block1, X1, Y1), at(Block2, X2, Y2), clear(Block2), available(Agent)],
  [on(_, Block1), on(Block1, _), moving_table_to_table(_, Block, _, _, _, _), moving_table_to_block(_, Block, _, _, _, _, _)],
  [],
  [agent(Agent), pos(X1, Y1), pos(X2, Y2), block(Block1), block(Block2), Block1 \= Block2],
  [
    del(available(Agent)), del(clear(Block1)), del(ontable(Block1)), del(at(Block1, X1, Y1)),
    add(moving_table_to_block(Agent, Block1, Block2, X1, Y1, X2, Y2))
  ]
).
action(move_table_to_block_end(Agent, Block1, Block2, X1, Y1, X2, Y2),
  [moving_table_to_block(Agent, Block1, Block2, X1, Y1, X2, Y2), clear(Block2)],
  [],
  [],
  [agent(Agent)],
  [
    del(clear(Block2)), del(moving_table_to_block(Agent, Block1, Block2, X1, Y1, X2, Y2)),
    add(on(Block1, Block2)), add(at(Block1, X2, Y2)), add(clear(Block1)), add(available(Agent))
  ]
).

% Move a block B1 from a position on the table to the top of another block B2
action(move_block_to_block_start(Agent, Block1, Block2, X1, Y1, X2, Y2),
  [ontable(Block1), at(Block1, X1, Y1), at(Block2, X2, Y2), clear(Block2), available(Agent)],
  [on(_, Block1), on(Block1, _), moving_block_to_table(_, Block, _, _, _, _), moving_block_to_block(_, Block, _, _, _, _, _)],
  [],
  [agent(Agent), pos(X1, Y1), pos(X2, Y2), block(Block1), block(Block2), Block1 \= Block2],
  [
    del(available(Agent)), del(clear(Block1)), del(ontable(Block1)), del(at(Block1, X1, Y1)),
    add(moving_block_to_block(Agent, Block1, Block2, X1, Y1, X2, Y2))
  ]
).
action(move_block_to_block_end(Agent, Block1, Block2, X1, Y1, X2, Y2),
  [moving_block_to_block(Agent, Block1, Block2, X1, Y1, X2, Y2), clear(Block2)],
  [],
  [],
  [agent(Agent)],
  [
    del(clear(Block2)), del(moving_block_to_block(Agent, Block1, Block2, X1, Y1, X2, Y2)),
    add(on(Block1, Block2)), add(at(Block1, X2, Y2)), add(clear(Block1)), add(available(Agent))
  ]
).

% Move a block B1 from the top of another block B2 to the table
action(move_block_to_table_start(Agent, Block1, Block2, X1, Y1, X2, Y2),
  [on(Block1, Block2), at(Block1, X1, Y1), at(Block2, X2, Y2), clear(Block1), available(Agent)],
  [ontable(Block1), moving_block_to_table(_, Block, _, _, _, _), moving_block_to_block(_, Block, _, _, _, _, _)],
  [],
  [agent(Agent), pos(X1, Y1), pos(X2, Y2), block(Block1), block(Block2)],
  [
    del(available(Agent)), del(clear(Block1)), del(on(Block1, Block2)), del(at(Block1, X1, Y1)),
    add(moving_block_to_table(Agent, Block1, X1, Y1, X2, Y2))
  ]
).
action(move_block_to_table_end(Agent, Block1, Block2, X1, Y1, X2, Y2),
  [moving_block_to_table(Agent, Block1, X1, Y1, X2, Y2)],
  [at(_, X2, Y2)],
  [],
  [agent(Agent)],
  [
    del(moving_block_to_table(Agent, Block1, X1, Y1, X2, Y2)),
    add(ontable(Block1)), add(at(Block1, X2, Y2)), add(clear(Block1)), add(available(Agent))
  ]
).


%%%%%%%%%%%%%%%%%%%%%%%
% ll_actions
%%%%%%%%%%%%%%%%%%%%%%%
ll_action(move_arm_start(Arm, X1, Y1, X2, Y2),
  [ll_arm_at(Arm, X1, Y1)],
  [moving_arm(Arm, _, _, _, _, _, _), gripping(Arm, _), releasing(Arm)],
  [],
  [ll_arm(Arm), pos(X1, Y1), pos(X2, Y2)],
  [
    add(moving_arm(Arm, X1, Y1, X2, Y2))
  ]
).

ll_action(move_arm_end(Arm, X1, Y1, X2, Y2),
  [moving_arm(Arm, X1, Y1, X2, Y2)],
  [],
  [],
  [ll_arm(Arm)],
  [
    del(moving_arm(Arm, X1, Y1, X2, Y2))
  ]
).

ll_action(close(Arm),
  [ll_gripper(Arm, open)],
  [moving_arm(Arm, _, _, _, _, _, _), gripping(Arm, _), releasing(Arm), gripped(Arm)],
  [],
  [ll_arm(Arm)],
  [
    del(ll_gripper(Arm, open)),
    add(gripping(Arm, _))
  ]
).

ll_action(open(Arm),
  [gripping(Arm, _)],
  [],
  [],
  [ll_arm(Arm)],
  [
    del(gripping(Arm, _)),
    add(gripped(Arm)),
    add(ll_gripper(Arm, open))
  ]
).

%%%%%%%%%%%%%%%%%%%%%%%
% mappings
%%%%%%%%%%%%%%%%%%%%%%%
mapping(move_table_to_table_start(Agent, Block, X1, Y1, X2, Y2),
  [
    move_arm_start(Agent, X1, Y1, X2, Y2),
    move_arm_end(Agent, X1, Y1, X2, Y2)
  ]
).

mapping(move_table_to_block_start(Agent, Block1, Block2, X1, Y1, X2, Y2),
  [
    move_arm_start(Agent, X1, Y1, X2, Y2),
    move_arm_end(Agent, X1, Y1, X2, Y2)
  ]
).

mapping(move_block_to_block_start(Agent, Block1, Block2, X1, Y1, X2, Y2),
  [
    move_arm_start(Agent, X1, Y1, X2, Y2),
    move_arm_end(Agent, X1, Y1, X2, Y2)
  ]
).

mapping(move_block_to_table_start(Agent, Block1, Block2, X1, Y1, X2, Y2),
  [
    move_arm_start(Agent, X1, Y1, X2, Y2),
    move_arm_end(Agent, X1, Y1, X2, Y2)
  ]
).
