% Dynamic predicates from resources (auto-generated by Python script)
:- dynamic agent/1.
:- dynamic ll_arm/1.
:- dynamic ll_gripper/1.

% This file was automatically generated by the LLM system
%%%%%%%%%%%%%%%%%%%%%%%
% kb
%%%%%%%%%%%%%%%%%%%%%%%
% Positions
pos(0,0).
pos(1,1).
pos(2,2).
pos(3,3).
pos(4,4).

% Blocks
block(b1).
block(b2).
block(b3).
block(b4).

% Agents
agent(a1).
agent(a2).

% Arms
ll_arm(a1).
ll_arm(a2).

% Grippers
ll_gripper(a1).
ll_gripper(a2).

% Resources
resources(agent(_)).
resources(ll_arm(_)).
resources(ll_gripper(_)).

%%%%%%%%%%%%%%%%%%%%%%%
% init
%%%%%%%%%%%%%%%%%%%%%%%
init_state([
% Blocks
% Positions for b1, b2, b3, b4 are (1,1), (1,1), (2,2), (2,2) respectively.
% Relationships: b2 is on b1, b4 is on b3. Agents a1 and a2 are available.
        ontable(b1), ontable(b3),
        on(b2, b1), on(b4, b3),
        at(b1,1,1), at(b2,1,1), at(b3,2,2), at(b4,2,2),
        clear(b2), clear(b4),
        available(a1), available(a2),
        % Low-level state
        ll_arm_at(a1,0,0), ll_arm_at(a2,10,10),
        ll_gripper(a1,open), ll_gripper(a2,open)
     ]
).

%%%%%%%%%%%%%%%%%%%%%%%
% goal
%%%%%%%%%%%%%%%%%%%%%%%
goal_state([
% Blocks
% Positions for b1, b2, b3, b4 are (3,3), (4,4), (2,2), (1,1) respectively.
% Relationships: b4 is on b1, b2 is on b3. Agents a1 and a2 are available.
        ontable(b1), ontable(b2), ontable(b3),
        on(b4, b1), on(b2, b3),
        at(b1,3,3), at(b2,4,4), at(b3,2,2), at(b4,1,1),
        clear(b4), clear(b3),
        available(a1), available(a2),
        % Low-level state
        ll_arm_at(a1,_,_), ll_arm_at(a2,_,_),
        ll_gripper(a1,_), ll_gripper(a2,_)
     ]
).

%%%%%%%%%%%%%%%%%%%%%%%
% actions
%%%%%%%%%%%%%%%%%%%%%%%
% High-level actions are not provided for this query.

action(move_table_to_table(Agent, Block, X1, Y1, X2, Y2),
  [agent(Agent), block(Block), pos(X1, Y1), pos(X2, Y2)],
  [available(Agent), ontable(Block), at(Block, X1, Y1), clear(Block)],
  [
    add(at(Block, X2, Y2)),
    del(at(Block, X1, Y1))
  ]
).

action(move_table_to_block(Agent, Block1, Block2, X1, Y1, X2, Y2),
  [agent(Agent), block(Block1), block(Block2), pos(X1, Y1), pos(X2, Y2)],
  [available(Agent), ontable(Block1), at(Block1, X1, Y1), clear(Block1), at(Block2, X2, Y2), clear(Block2)],
  [
    add(on(Block1, Block2)),
    add(at(Block1, X2, Y2)),
    del(ontable(Block1)),
    del(at(Block1, X1, Y1)),
    del(clear(Block2))
  ]
).

action(move_onblock_to_table(Agent, Block1, Block2, X1, Y1, X2, Y2),
  [agent(Agent), block(Block1), block(Block2), pos(X1, Y1), pos(X2, Y2)],
  [available(Agent), on(Block1, Block2), clear(Block1), at(Block1, X1, Y1), at(Block2, X1, Y1)],
  [
    add(ontable(Block1)),
    add(at(Block1, X2, Y2)),
    add(clear(Block2)),
    del(on(Block1, Block2)),
    del(at(Block1, X1, Y1))
  ]
).

action(move_onblock_to_block(Agent, Block1, Block2, Block3, X1, Y1, X2, Y2),
    [agent(Agent), block(Block1), block(Block2), block(Block3), pos(X1, Y1), pos(X2, Y2)],
    [available(Agent), on(Block1, Block2), clear(Block1), at(Block1, X1, Y1), at(Block2, X1, Y1), at(Block3, X2, Y2), clear(Block3)],
    [
        add(on(Block1, Block3)),
        add(clear(Block2)),
        add(at(Block1, X2, Y2)),
        del(on(Block1, Block2)),
        del(at(Block1, X1, Y1)),
        del(clear(Block3))
    ]
).

%%%%%%%%%%%%%%%%%%%%%%%
% ll_actions
%%%%%%%%%%%%%%%%%%%%%%%
% Low-level actions for moving arms and manipulating grippers
ll_action(move_arm_start(Agent, X1, Y1, X2, Y2),
         [ll_arm(Agent), ll_at(Agent, X1, Y1)],
         [ll_moving_arm(_, _, _, X2, Y2), ll_gripped(Agent)],
         [],
         [ll_arm(Agent), pos(X1, Y1), pos(X2, Y2)],
         [del(ll_at(Agent, X1, Y1)), add(ll_moving_arm(Agent, X1, Y1, X2, Y2)) ]
        ).

        ll_action(move_arm_end(Agent, X1, Y1, X2, Y2),
         [ll_moving_arm(Agent, X1, Y1, X2, Y2)],
         [],
         [],
         [ll_at(Agent, X2, Y2)],
         [del(ll_moving_arm(Agent, X1, Y1, X2, Y2)), add(ll_at(Agent, X2, Y2)) ]
        ).

        ll_action(grip_start(Agent),
         [ll_gripper(Agent)],
         [],
         [],
         [ll_gripped(Agent)],
         [del(ll_gripper(Agent)), add(ll_gripped(Agent)) ]
        ).

        ll_action(grip_end(Agent),
         [ll_gripped(Agent)],
         [],
         [],
         [ll_gripper(Agent)],
         [del(ll_gripped(Agent)), add(ll_gripper(Agent)) ]
        ).

        ll_action(release_start(Agent),
         [ll_gripped(Agent)],
         [],
         [],
         [ll_releasing(Agent)],
         [del(ll_gripped(Agent)), add(ll_releasing(Agent)) ]
        ).

        ll_action(release_end(Agent),
         [ll_releasing(Agent)],
         [],
         [],
         [],
         [del(ll_releasing(Agent)) ]
        ).

%%%%%%%%%%%%%%%%%%%%%%%
% mappings
%%%%%%%%%%%%%%%%%%%%%%%
% Mapping for the 'move_table_to_table' action
mapping(move_table_to_table_start(Agent, b_, X1, Y1, X2, Y2),
  [
    ll_move_arm_start(Agent, _, _, X1, Y1),
    ll_move_arm_end(Agent, _, _, X1, Y1),
    ll_grip_start(Agent),
    ll_grip_end(Agent),
    ll_move_arm_start(Agent, X1, Y1, X2, Y2),
    ll_move_arm_end(Agent, X1, Y1, X2, Y2),
    ll_release_start(Agent),
    ll_release_end(Agent)
  ]
).

% Mapping for the 'move_table_to_block' action
mapping(move_table_to_block_start(Agent, b_, X1, Y1, X2, Y2, b_),
  [
    ll_move_arm_start(Agent, _, _, X1, Y1),
    ll_move_arm_end(Agent, _, _, X1, Y1),
    ll_grip_start(Agent),
    ll_grip_end(Agent),
    ll_move_arm_start(Agent, X1, Y1, X2, Y2),
    ll_move_arm_end(Agent, X1, Y1, X2, Y2),
    ll_release_start(Agent),
    ll_release_end(Agent)
  ]
).

% Mapping for the 'move_onblock_to_table' action
mapping(move_onblock_to_table_start(Agent, b_, X1, Y1, X2, Y2),
  [
    ll_move_arm_start(Agent, _, _, X1, Y1),
    ll_move_arm_end(Agent, _, _, X1, Y1),
    ll_grip_start(Agent),
    ll_grip_end(Agent),
    ll_move_arm_start(Agent, X1, Y1, X2, Y2),
    ll_move_arm_end(Agent, X1, Y1, X2, Y2),
    ll_release_start(Agent),
    ll_release_end(Agent)
  ]
).

% Mapping for the 'move_onblock_to_block' action
mapping(move_onblock_to_block_start(Agent, b_, X1, Y1, X2, Y2, b_),
  [
    ll_move_arm_start(Agent, _, _, X1, Y1),
    ll_move_arm_end(Agent, _, _, X1, Y1),
    ll_grip_start(Agent),
    ll_grip_end(Agent),
    ll_move_arm_start(Agent, X1, Y1, X2, Y2),
    ll_move_arm_end(Agent, X1, Y1, X2, Y2),
    ll_release_start(Agent),
    ll_release_end(Agent)
  ]
).