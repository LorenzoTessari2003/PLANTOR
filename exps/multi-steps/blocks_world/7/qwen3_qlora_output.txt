% Dynamic predicates from resources (auto-generated by Python script)
:- dynamic agent/1.
:- dynamic ll_arm/1.
:- dynamic ll_gripper/1.

% This file was automatically generated by the LLM system
%%%%%%%%%%%%%%%%%%%%%%%
% kb
%%%%%%%%%%%%%%%%%%%%%%%
% Positions
pos(0,0).
pos(1,1).
pos(2,2).
pos(3,3).

% Blocks
block(b1).
block(b2).
block(b3).

% Agents
agent(a1).

% Resources
resources(agent(_)).
resources(ll_arm(_)).
resources(ll_gripper(_)).

% Low-level predicates
ll_arm_start(Agent, X1, Y1, X2, Y2).
ll_arm_end(Agent, X1, Y1, X2, Y2).

ll_grip_start(Agent).
ll_grip_end(Agent).

ll_release_start(Agent).
ll_release_end(Agent).

ll_carry_start(Agent, Block, X1, Y1, X2, Y2).
ll_carry_end(Agent, Block, X1, Y1, X2, Y2).

%%%%%%%%%%%%%%%%%%%%%%%
% init
%%%%%%%%%%%%%%%%%%%%%%%
init_state(
init_table([b1, b2, b3]),
[
    ontable(b1), ontable(b2), ontable(b3),
    at(b1,1,1), at(b2,2,2), at(b3,3,3),
    clear(b1), clear(b2), clear(b3), available(a1),
    ll_arm_at(a1,0,0),
    ll_gripper(a1,open), ll_gripper(a2,open)
].
,

%%%%%%%%%%%%%%%%%%%%%%%
% goal
%%%%%%%%%%%%%%%%%%%%%%%
goal_state(
goal_table([b1, b2, b3]),
[
    ontable(b1),
    on(b2, b1),
    on(b3, b2),
    at(b1,1,1), at(b2,1,1), at(b3,1,1),
    clear(b1), clear(b2), clear(b3), available(a1),
    ll_arm_at(a1,_,_),
    ll_gripper(a1,_)
].
,

%%%%%%%%%%%%%%%%%%%%%%%
% actions
%%%%%%%%%%%%%%%%%%%%%%%
% Move Block1 from (X1,Y1) on the table to the top of block Block2 in (X2,Y2). 
action(move_table_to_block_start(Agent, Block1, Block2, X1, Y1, X2, Y2),
[available(Agent), ontable(Block1), at(Block1, X1, Y1), at(Block2, X2, Y2), clear(Block2), clear(Block1)],
[],
[],
[agent(Agent), pos(X1, Y1), pos(X2, Y2), block(Block1), block(Block2), Block1 != Block2],
[
    del(available(Agent)), del(clear(Block1)), del(ontable(Block1)), del(at(Block1, X1, Y1)),
    add(moving_table_to_block(Agent, Block1, Block2, X1, Y1, X2, Y2))
]
).
action(move_table_to_block_end(Agent, Block1, Block2, X1, Y1, X2, Y2),
[moving_table_to_block(Agent, Block1, Block2, X1, Y1, X2, Y2)],
[],
[],
[agent(Agent)],
[
    del(moving_table_to_block(Agent, Block1, Block2, X1, Y1, X2, Y2)),
    add(ontable(Block1)), add(at(Block1, X2, Y2)), add(clear(Block1)), add(available(Agent))
]
).
% Move a block from a position (X1,Y1) to another position (X2,Y2) on the table. 
action(move_table_to_table_start(Agent, Block, X1, Y1, X2, Y2), 
[ontable(Block), at(Block, X1, Y1), available(Agent), clear(Block)],
[at(_, X2, Y2)],
[],
[agent(Agent), pos(X1, Y1), pos(X2, Y2), block(Block)],
[
    del(available(Agent)), del(clear(Block)), del(ontable(Block)), del(at(Block, X1, Y1)),
    add(moving_table_to_table(Agent, Block, X1, Y1, X2, Y2))
]
).
action(move_table_to_table_end(Agent, Block, X1, Y1, X2, Y2),
[moving_table_to_table(Agent, Block, X1, Y1, X2, Y2)],
[],
[],
[agent(Agent)],
[
    del(moving_table_to_table(Agent, Block, X1, Y1, X2, Y2)),
    add(ontable(Block)), add(at(Block, X2, Y2)), add(clear(Block)), add(available(Agent))
]
).
% Move Block1 from (X1,Y1) on top of another block to the table in (X2,Y2).
action(move_onblock_to_table_start(Agent, Block1, X1, Y1, X2, Y2),
[available(Agent), on(Block1, Block2), at(Block1, X1, Y1), clear(Block1)],
[moving_onblock_to_table(_, Block1, _, _, _, _)],
[],
[agent(Agent), pos(X1, Y1), pos(X2, Y2), block(Block1), block(Block2), Block1 != Block2],
[
    del(available(Agent)), del(clear(Block1)), del(on(Block1, Block2)), del(at(Block1, X1, Y1)),
    add(moving_onblock_to_table(Agent, Block1, X1, Y1, X2, Y2))
]
).
action(move_onblock_to_table_end(Agent, Block1, X1, Y1, X2, Y2),
[moving_onblock_to_table(Agent, Block1, X1, Y1, X2, Y2)],
[at(X2, Y2)],
[],
[agent(Agent)],
[
    del(moving_onblock_to_table(Agent, Block1, X1, Y1, X2, Y2)),
    add(ontable(Block1)), add(at(Block1, X2, Y2)), add(clear(Block1)), add(available(Agent))
]
).
% Move Block1 from (X1,Y1) on top of another block to the top of block Block2 in (X2,Y2).
action(move_onblock_to_block_start(Agent, Block1, Block2, X1, Y1, X2, Y2),
[available(Agent), on(Block1, Block3), at(Block1, X1, Y1), at(Block2, X2, Y2), clear(Block2), clear(Block1)],
[moving_onblock_to_block(_, Block1, _, _, _, _)],
[],
[agent(Agent), pos(X1, Y1), pos(X2, Y2), block(Block1), block(Block2), block(Block3), Block1 != Block2, Block1 != Block3],
[
    del(available(Agent)), del(clear(Block1)), del(on(Block1, Block3)), del(at(Block1, X1, Y1)),
    add(moving_onblock_to_block(Agent, Block1, Block2, X1, Y1, X2, Y2)), add(clear(Block3))
]
).
action(move_onblock_to_block_end(Agent, Block1, Block2, X1, Y1, X2, Y2),
[moving_onblock_to_block(Agent, Block1, Block2, X1, Y1, X2, Y2), clear(Block2)],
[],
[],
[agent(Agent)],
[
    del(clear(Block2)), del(moving_onblock_to_block(Agent, Block1, Block2, X1, Y1, X2, Y2)),
    add(on(Block1, Block2)), add(at(Block1, X2, Y2)), add(clear(Block1)), add(available(Agent))
]
).


%%%%%%%%%%%%%%%%%%%%%%%
% ll_actions
%%%%%%%%%%%%%%%%%%%%%%%
ll_action(ll_move_arm_start(Arm, X1, Y1, X2, Y2),
  [ll_arm_at(Arm, X1, Y1)],
  [ll_moving_arm(Arm, _, _, _, _), ll_gripping(Arm, _), ll_releasing(Arm)],
  [],
  [ll_arm(Arm), pos(X1, Y1), pos(X2, Y2)],
  [
    add(ll_moving_arm(Arm, X1, Y1, X2, Y2)),
    del(ll_arm_at(Arm, X1, Y1))
  ]
).

ll_action(ll_move_arm_end(Arm, X1, Y1, X2, Y2),
  [ll_moving_arm(Arm, X1, Y1, X2, Y2)],
  [],
  [],
  [],
  [
    del(ll_moving_arm(Arm, X1, Y1, X2, Y2)),
    add(ll_arm_at(Arm, X2, Y2))
  ]
).

ll_action(ll_grip_start(Arm),
  [ll_gripper(Arm, open)],
  [ll_moving_arm(Arm, _, _, _, _), ll_gripping(Arm, _), ll_releasing(Arm)],
  [],
  [ll_gripper(Arm)],
  [
    del(ll_gripper(Arm, open)),
    add(ll_gripping(Arm))
  ]
).

ll_action(ll_grip_end(Arm),
  [ll_gripping(Arm)],
  [],
  [],
  [ll_gripper(Arm)],
  [
    del(ll_gripping(Arm)),
    add(ll_gripper(Arm, close))
  ]
).

ll_action(ll_release_start(Arm),
  [ll_gripper(Arm, close)],
  [ll_moving_arm(Arm, _, _, _, _), ll_gripping(Arm, _), ll_releasing(Arm)],
  [],
  [ll_gripper(Arm)],
  [
    del(ll_gripper(Arm, close)),
    add(ll_releasing(Arm))
  ]
).

ll_action(ll_release_end(Arm),
  [ll_releasing(Arm)],
  [],
  [],
  [ll_gripper(Arm)],
  [
    del(ll_releasing(Arm)),
    add(ll_gripper(Arm, open))
  ]
).

%%%%%%%%%%%%%%%%%%%%%%%
% mappings
%%%%%%%%%%%%%%%%%%%%%%%
mapping(move_table_to_table_start(Agent, Block, X1, Y1, X2, Y2),
  [
    ll_move_arm_start(Agent, 0, 0, X1, Y1),
    ll_move_arm_end(Agent, 0, 0, X1, Y1),
    ll_grip_start(Agent),
    ll_grip_end(Agent),
    ll_move_arm_start(Agent, X1, Y1, X2, Y2),
    ll_move_arm_end(Agent, X1, Y1, X2, Y2),
    ll_release_start(Agent),
    ll_release_end(Agent)
  ]
).

mapping(move_table_to_block_start(Agent, Block1, Block2, X1, Y1, X2, Y2),
  [
    ll_move_arm_start(Agent, 0, 0, X1, Y1),
    ll_move_arm_end(Agent, 0, 0, X1, Y1),
    ll_grip_start(Agent),
    ll_grip_end(Agent),
    ll_move_arm_start(Agent, X1, Y1, X2, Y2),
    ll_move_arm_end(Agent, X1, Y1, X2, Y2),
    ll_release_start(Agent),
    ll_release_end(Agent)
  ]
).

mapping(move_onblock_to_table_start(Agent, Block1, Block2, X1, Y1, X2, Y2),
  [
    ll_move_arm_start(Agent, 0, 0, X1, Y1),
    ll_move_arm_end(Agent, 0, 0, X1, Y1),
    ll_grip_start(Agent),
    ll_grip_end(Agent),
    ll_move_arm_start(Agent, X1, Y1, X2, Y2),
    ll_move_arm_end(Agent, X1, Y1, X2, Y2),
    ll_release_start(Agent),
    ll_release_end(Agent)
  ]
).

mapping(move_onblock_to_block_start(Agent, Block1, Block2, Block3, X1, Y1, X2, Y2),
  [
    ll_move_arm_start(Agent, 0, 0, X1, Y1),
    ll_move_arm_end(Agent, 0, 0, X1, Y1),
    ll_grip_start(Agent),
    ll_grip_end(Agent),
    ll_move_arm_start(Agent, X1, Y1, X2, Y2),
    ll_move_arm_end(Agent, X1, Y1, X2, Y2),
    ll_release_start(Agent),
    ll_release_end(Agent)
  ]
).
