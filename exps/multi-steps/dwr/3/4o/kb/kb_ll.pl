% This file was automatically generated by the LLM system
%%%%%%%%%%%%%%%%%%%%%%%
% kb
%%%%%%%%%%%%%%%%%%%%%%%
% Locations
location(location1).
location(location2).

% Containers
container(c1).
container(c2).
container(c3).
container(c4).

% Robot
robot(r1).

% Cranes
crane(crane1, location1).
crane(crane2, location2).

% Initial positions of containers
at(c1, location1, ground).
on(c2, c1).
at(c3, location2, ground).
on(c4, c3).

% Initial position of the robot
at(r1, location1).

% Resources
resources(robot(_)).
resources(ll_crane(_)).
resources(ll_gripper(_)).

% Connections between locations
connected(location1, location2).
connected(location2, location1).

% Low-level predicates
ll_crane(crane1).
ll_crane(crane2).

ll_gripper(crane1).
ll_gripper(crane2).

%%%%%%%%%%%%%%%%%%%%%%%
% init
%%%%%%%%%%%%%%%%%%%%%%%
init_state([
  at(c1, location1, ground), on(c2, c1), at(c3, location2, ground), on(c4, c3),
  at(r1, location1),
  clear(c2), clear(c4),
  ll_crane_at(crane1, location1), ll_crane_at(crane2, location2),
  ll_gripper(crane1, open), ll_gripper(crane2, open)
]).

%%%%%%%%%%%%%%%%%%%%%%%
% goal
%%%%%%%%%%%%%%%%%%%%%%%
goal_state([
  at(c1, location1, ground), on(c2, c3), at(c3, location2, ground), on(c4, c1),
  at(r1, location1),
  clear(c2), clear(c4),
  ll_crane_at(crane1, location1), ll_crane_at(crane2, location2),
  ll_gripper(crane1, _), ll_gripper(crane2, _)
]).

%%%%%%%%%%%%%%%%%%%%%%%
% actions
%%%%%%%%%%%%%%%%%%%%%%%
% Move a container from the ground to the top of another container within the same location
action(move_ground_to_top_start(Crane, Container1, Container2, Location),
  [at(Container1, Location, ground), clear(Container1), clear(Container2), crane(Crane, Location)],
  [on(_, Container1), on(Container1, _), moving_ground_to_top(_, Container1, _, _)],
  [],
  [container(Container1), container(Container2), location(Location), crane(Crane, Location)],
  [
    del(at(Container1, Location, ground)), del(clear(Container1)), del(clear(Container2)),
    add(moving_ground_to_top(Crane, Container1, Container2, Location))
  ]
).
action(move_ground_to_top_end(Crane, Container1, Container2, Location),
  [moving_ground_to_top(Crane, Container1, Container2, Location)],
  [],
  [],
  [crane(Crane, Location)],
  [
    del(moving_ground_to_top(Crane, Container1, Container2, Location)),
    add(on(Container1, Container2)), add(clear(Container1))
  ]
).

% Load a container onto the robot
action(load_container_start(Crane, Container, Robot, Location),
  [at(Container, Location, ground), clear(Container), at(Robot, Location), crane(Crane, Location)],
  [on(_, Container), on(Container, _), loading_container(_, Container, _, _)],
  [],
  [container(Container), robot(Robot), location(Location), crane(Crane, Location)],
  [
    del(at(Container, Location, ground)), del(clear(Container)),
    add(loading_container(Crane, Container, Robot, Location))
  ]
).
action(load_container_end(Crane, Container, Robot, Location),
  [loading_container(Crane, Container, Robot, Location)],
  [],
  [],
  [crane(Crane, Location)],
  [
    del(loading_container(Crane, Container, Robot, Location)),
    add(on(Container, Robot)), add(clear(Container))
  ]
).

% Unload a container from the robot
action(unload_container_start(Crane, Container, Robot, Location),
  [on(Container, Robot), clear(Container), at(Robot, Location), crane(Crane, Location)],
  [on(_, Container), on(Container, _), unloading_container(_, Container, _, _)],
  [],
  [container(Container), robot(Robot), location(Location), crane(Crane, Location)],
  [
    del(on(Container, Robot)), del(clear(Container)),
    add(unloading_container(Crane, Container, Robot, Location))
  ]
).
action(unload_container_end(Crane, Container, Robot, Location),
  [unloading_container(Crane, Container, Robot, Location)],
  [],
  [],
  [crane(Crane, Location)],
  [
    del(unloading_container(Crane, Container, Robot, Location)),
    add(at(Container, Location, ground)), add(clear(Container))
  ]
).

% Move a container from the top of another container to the ground within the same location
action(move_top_to_ground_start(Crane, Container1, Container2, Location),
  [on(Container1, Container2), clear(Container1), crane(Crane, Location)],
  [on(_, Container1), on(Container1, _), moving_top_to_ground(_, Container1, _, _)],
  [],
  [container(Container1), container(Container2), location(Location), crane(Crane, Location)],
  [
    del(on(Container1, Container2)), del(clear(Container1)),
    add(moving_top_to_ground(Crane, Container1, Container2, Location)), add(clear(Container2))
  ]
).
action(move_top_to_ground_end(Crane, Container1, Container2, Location),
  [moving_top_to_ground(Crane, Container1, Container2, Location)],
  [],
  [],
  [crane(Crane, Location)],
  [
    del(moving_top_to_ground(Crane, Container1, Container2, Location)),
    add(at(Container1, Location, ground)), add(clear(Container1))
  ]
).

% Move a container from the top of another container to the top of another container within the same location
action(move_top_to_top_start(Crane, Container1, Container2, Container3, Location),
  [on(Container1, Container2), clear(Container1), clear(Container3), crane(Crane, Location)],
  [on(_, Container1), on(Container1, _), moving_top_to_top(_, Container1, _, _, _)],
  [],
  [container(Container1), container(Container2), container(Container3), location(Location), crane(Crane, Location)],
  [
    del(on(Container1, Container2)), del(clear(Container1)), del(clear(Container3)),
    add(moving_top_to_top(Crane, Container1, Container2, Container3, Location)), add(clear(Container2))
  ]
).
action(move_top_to_top_end(Crane, Container1, Container2, Container3, Location),
  [moving_top_to_top(Crane, Container1, Container2, Container3, Location)],
  [],
  [],
  [crane(Crane, Location)],
  [
    del(moving_top_to_top(Crane, Container1, Container2, Container3, Location)),
    add(on(Container1, Container3)), add(clear(Container1))
  ]
).

% Move the robot from one location to another
action(move_robot_start(Robot, Location1, Location2),
  [at(Robot, Location1)],
  [moving_robot(_, _, _)],
  [],
  [robot(Robot), location(Location1), location(Location2), connected(Location1, Location2)],
  [
    del(at(Robot, Location1)),
    add(moving_robot(Robot, Location1, Location2))
  ]
).
action(move_robot_end(Robot, Location1, Location2),
  [moving_robot(Robot, Location1, Location2)],
  [],
  [],
  [robot(Robot)],
  [
    del(moving_robot(Robot, Location1, Location2)),
    add(at(Robot, Location2))
  ]
).

%%%%%%%%%%%%%%%%%%%%%%%
% ll_actions
%%%%%%%%%%%%%%%%%%%%%%%
% Move the robot from one location to another
ll_action(move_start(Robot, LocationFrom, LocationTo),
  [at(Robot, LocationFrom)],
  [moving_robot(_, _, _)],
  [],
  [robot(Robot), location(LocationFrom), location(LocationTo), connected(LocationFrom, LocationTo)],
  [
    del(at(Robot, LocationFrom)),
    add(moving_robot(Robot, LocationFrom, LocationTo))
  ]
).
ll_action(move_end(Robot, LocationFrom, LocationTo),
  [moving_robot(Robot, LocationFrom, LocationTo)],
  [],
  [],
  [robot(Robot)],
  [
    del(moving_robot(Robot, LocationFrom, LocationTo)),
    add(at(Robot, LocationTo))
  ]
).

% Move the crane to the top of the container
ll_action(go_to_c_start(Crane, Container),
  [ll_crane(Crane), at(Container, Location, _), crane(Crane, Location)],
  [moving_crane(_, _, _)],
  [],
  [crane(Crane, Location), container(Container), location(Location)],
  [
    add(moving_crane(Crane, Container, Location))
  ]
).
ll_action(go_to_c_end(Crane, Container),
  [moving_crane(Crane, Container, Location)],
  [],
  [],
  [crane(Crane, Location)],
  [
    del(moving_crane(Crane, Container, Location)),
    add(at(Crane, Container))
  ]
).

% Close the gripper
ll_action(close_start(Crane),
  [ll_gripper(Crane, open)],
  [closing_gripper(_, _)],
  [],
  [ll_gripper(Crane)],
  [
    del(ll_gripper(Crane, open)),
    add(closing_gripper(Crane))
  ]
).
ll_action(close_end(Crane),
  [closing_gripper(Crane)],
  [],
  [],
  [ll_gripper(Crane)],
  [
    del(closing_gripper(Crane)),
    add(ll_gripper(Crane, closed))
  ]
).

% Open the gripper
ll_action(open_start(Crane),
  [ll_gripper(Crane, closed)],
  [opening_gripper(_, _)],
  [],
  [ll_gripper(Crane)],
  [
    del(ll_gripper(Crane, closed)),
    add(opening_gripper(Crane))
  ]
).
ll_action(open_end(Crane),
  [opening_gripper(Crane)],
  [],
  [],
  [ll_gripper(Crane)],
  [
    del(opening_gripper(Crane)),
    add(ll_gripper(Crane, open))
  ]
).

%%%%%%%%%%%%%%%%%%%%%%%
% mappings
%%%%%%%%%%%%%%%%%%%%%%%
% Move a container from the ground to the top of another container within the same location
mapping(move_ground_to_top_start(Crane, Container1, Container2, Location),
  [
    go_to_c_start(Crane, Container1),
    go_to_c_end(Crane, Container1),
    close_start(Crane),
    close_end(Crane),
    go_to_c_start(Crane, Container2),
    go_to_c_end(Crane, Container2),
    open_start(Crane),
    open_end(Crane)
  ]
).

% Load a container onto the robot
mapping(load_container_start(Crane, Container, Robot, Location),
  [
    go_to_c_start(Crane, Container),
    go_to_c_end(Crane, Container),
    close_start(Crane),
    close_end(Crane),
    go_to_c_start(Crane, Robot),
    go_to_c_end(Crane, Robot),
    open_start(Crane),
    open_end(Crane)
  ]
).

% Unload a container from the robot
mapping(unload_container_start(Crane, Container, Robot, Location),
  [
    go_to_c_start(Crane, Robot),
    go_to_c_end(Crane, Robot),
    close_start(Crane),
    close_end(Crane),
    go_to_c_start(Crane, Container),
    go_to_c_end(Crane, Container),
    open_start(Crane),
    open_end(Crane)
  ]
).

% Move a container from the top of another container to the ground within the same location
mapping(move_top_to_ground_start(Crane, Container1, Container2, Location),
  [
    go_to_c_start(Crane, Container1),
    go_to_c_end(Crane, Container1),
    close_start(Crane),
    close_end(Crane),
    go_to_c_start(Crane, Container2),
    go_to_c_end(Crane, Container2),
    open_start(Crane),
    open_end(Crane)
  ]
).

% Move a container from the top of another container to the top of another container within the same location
mapping(move_top_to_top_start(Crane, Container1, Container2, Container3, Location),
  [
    go_to_c_start(Crane, Container1),
    go_to_c_end(Crane, Container1),
    close_start(Crane),
    close_end(Crane),
    go_to_c_start(Crane, Container3),
    go_to_c_end(Crane, Container3),
    open_start(Crane),
    open_end(Crane)
  ]
).

% Move the robot from one location to another
mapping(move_robot_start(Robot, Location1, Location2),
  [
    move_start(Robot, Location1, Location2),
    move_end(Robot, Location1, Location2)
  ]
).
