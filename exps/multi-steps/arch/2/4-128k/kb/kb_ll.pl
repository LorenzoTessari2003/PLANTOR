% This file was automatically generated by the LLM system
%%%%%%%%%%%%%%%%%%%%%%%
% kb
%%%%%%%%%%%%%%%%%%%%%%%
% Define the positions on the table
pos(1,1).
pos(2,2).
pos(3,3).
pos(4,4).
pos(5,5).
pos(6,6).
pos(9,6).

% Define the blocks and their dimensions
block(b1). % Pillar block
block(b2). % Pillar block
arch(b3).  % Architrave block

% Define the dimensions of the blocks (width x depth x height)
dimension(b1, 1, 1, 1).
dimension(b2, 1, 1, 1).
dimension(b3, 3, 1, 1). % Longer block to serve as the architrave

% Define the robotic arms as agents
agent(a1).
agent(a2).

% Define the end-effectors' initial positions
ll_arm_at(a1, 4, 4).
ll_arm_at(a2, 5, 5).

% Define the grippers' initial states
ll_gripper(a1, open).
ll_gripper(a2, open).

% Define the resources
resources(agent(_)).
resources(ll_arm_at(_, _, _)).
resources(ll_gripper(_, _)).

%%%%%%%%%%%%%%%%%%%%%%%
% init
%%%%%%%%%%%%%%%%%%%%%%%
init_state([
  ontable(b1), ontable(b2), ontable(b3),
  at(b1, 1, 1), at(b2, 2, 2), at(b3, 3, 3),
  clear(b1), clear(b2), clear(b3),
  ll_arm_at(a1, 4, 4), ll_arm_at(a2, 5, 5),
  ll_gripper(a1, open), ll_gripper(a2, open)
]).

%%%%%%%%%%%%%%%%%%%%%%%
% goal
%%%%%%%%%%%%%%%%%%%%%%%
goal_state([
  ontable(b1), ontable(b2),
  on(b3, b1), on(b3, b2),
  at(b1, 6, 6), at(b2, 9, 6), at(b3, 6, 6),
  clear(b3),
  ll_arm_at(a1, _, _), ll_arm_at(a2, _, _),
  ll_gripper(a1, _), ll_gripper(a2, _)
]).

%%%%%%%%%%%%%%%%%%%%%%%
% actions
%%%%%%%%%%%%%%%%%%%%%%%
% Move a block from a position on the table to another position on the table
action(move_block_start(Agent, Block, X1, Y1, X2, Y2),
  [available(Agent), ontable(Block), at(Block, X1, Y1), clear(Block)],
  [at(_, X2, Y2)],
  [],
  [agent(Agent), pos(X1, Y1), pos(X2, Y2), block(Block)],
  [
    del(available(Agent)), del(clear(Block)), del(ontable(Block)), del(at(Block, X1, Y1)),
    add(moving(Agent, Block, X1, Y1, X2, Y2))
  ]
).
action(move_block_end(Agent, Block, X1, Y1, X2, Y2),
  [moving(Agent, Block, X1, Y1, X2, Y2)],
  [at(_, X2, Y2)],
  [],
  [agent(Agent)],
  [
    del(moving(Agent, Block, X1, Y1, X2, Y2)),
    add(ontable(Block)), add(at(Block, X2, Y2)), add(clear(Block)), add(available(Agent))
  ]
).

% Move a block from a position on the table to the top of another block
action(move_block_to_top_start(Agent, Block1, Block2, X1, Y1, X2, Y2),
  [available(Agent), ontable(Block1), at(Block1, X1, Y1), clear(Block1), at(Block2, X2, Y2), clear(Block2)],
  [],
  [],
  [agent(Agent), pos(X1, Y1), block(Block1), block(Block2)],
  [
    del(available(Agent)), del(clear(Block1)), del(ontable(Block1)), del(at(Block1, X1, Y1)),
    add(moving_to_top(Agent, Block1, Block2, X1, Y1, X2, Y2))
  ]
).
action(move_block_to_top_end(Agent, Block1, Block2, X1, Y1, X2, Y2),
  [moving_to_top(Agent, Block1, Block2, X1, Y1, X2, Y2)],
  [],
  [],
  [agent(Agent)],
  [
    del(moving_to_top(Agent, Block1, Block2, X1, Y1, X2, Y2)), del(clear(Block2)),
    add(on(Block1, Block2)), add(at(Block1, X2, Y2)), add(available(Agent))
  ]
).

% Move a block from the top of a block to a position on the table
action(move_top_to_table_start(Agent, Block1, Block2, X1, Y1, X2, Y2),
  [available(Agent), on(Block1, Block2), at(Block1, X1, Y1), clear(Block1)],
  [at(_, X2, Y2)],
  [],
  [agent(Agent), pos(X2, Y2), block(Block1), block(Block2)],
  [
    del(available(Agent)), del(clear(Block1)), del(on(Block1, Block2)),
    add(moving_to_table(Agent, Block1, X1, Y1, X2, Y2)), add(clear(Block2))
  ]
).
action(move_top_to_table_end(Agent, Block1, X1, Y1, X2, Y2),
  [moving_to_table(Agent, Block1, X1, Y1, X2, Y2)],
  [at(_, X2, Y2)],
  [],
  [agent(Agent)],
  [
    del(moving_to_table(Agent, Block1, X1, Y1, X2, Y2)),
    add(ontable(Block1)), add(at(Block1, X2, Y2)), add(clear(Block1)), add(available(Agent))
  ]
).

% Move a block from the top of a block to the top of another block
action(move_top_to_top_start(Agent, Block1, Block2, Block3, X1, Y1, X2, Y2),
  [available(Agent), on(Block1, Block2), at(Block1, X1, Y1), clear(Block1), at(Block3, X2, Y2), clear(Block3)],
  [],
  [],
  [agent(Agent), block(Block1), block(Block2), block(Block3)],
  [
    del(available(Agent)), del(clear(Block1)), del(on(Block1, Block2)),
    add(moving_top_to_top(Agent, Block1, Block3, X1, Y1, X2, Y2)), add(clear(Block2))
  ]
).
action(move_top_to_top_end(Agent, Block1, Block3, X1, Y1, X2, Y2),
  [moving_top_to_top(Agent, Block1, Block3, X1, Y1, X2, Y2)],
  [],
  [],
  [agent(Agent)],
  [
    del(moving_top_to_top(Agent, Block1, Block3, X1, Y1, X2, Y2)), del(clear(Block3)),
    add(on(Block1, Block3)), add(at(Block1, X2, Y2)), add(available(Agent))
  ]
).

% Special action to place the architrave on top of the two pillars
action(place_architrave_start(Agent, Architrave, Pillar1, Pillar2, X1, Y1, X2, Y2),
  [available(Agent), ontable(Architrave), at(Architrave, X1, Y1), clear(Architrave), at(Pillar1, X2, Y2), at(Pillar2, X2, Y2), clear(Pillar1), clear(Pillar2)],
  [],
  [],
  [agent(Agent), arch(Architrave), block(Pillar1), block(Pillar2), pos(X2, Y2)],
  [
    del(available(Agent)), del(clear(Architrave)), del(ontable(Architrave)), del(at(Architrave, X1, Y1)),
    add(moving_architrave(Agent, Architrave, Pillar1, Pillar2, X1, Y1, X2, Y2))
  ]
).
action(place_architrave_end(Agent, Architrave, Pillar1, Pillar2, X1, Y1, X2, Y2),
  [moving_architrave(Agent, Architrave, Pillar1, Pillar2, X1, Y1, X2, Y2)],
  [],
  [],
  [agent(Agent)],
  [
    del(moving_architrave(Agent, Architrave, Pillar1, Pillar2, X1, Y1, X2, Y2)),
    add(on(Architrave, Pillar1)), add(on(Architrave, Pillar2)), add(at(Architrave, X2, Y2)), add(clear(Architrave)), add(available(Agent))
  ]
).


%%%%%%%%%%%%%%%%%%%%%%%
% ll_actions
%%%%%%%%%%%%%%%%%%%%%%%
% Low-level action to move the end-effector from one position to another
ll_action(ll_move_arm_start(Agent, X1, Y1, X2, Y2),
  [ll_arm_at(Agent, X1, Y1)],
  [ll_arm_at(_, X2, Y2)],
  [],
  [agent(Agent), pos(X1, Y1), pos(X2, Y2)],
  [
    del(ll_arm_at(Agent, X1, Y1)),
    add(ll_moving_arm(Agent, X1, Y1, X2, Y2))
  ]
).
ll_action(ll_move_arm_end(Agent, X1, Y1, X2, Y2),
  [ll_moving_arm(Agent, X1, Y1, X2, Y2)],
  [],
  [],
  [agent(Agent), pos(X2, Y2)],
  [
    del(ll_moving_arm(Agent, X1, Y1, X2, Y2)),
    add(ll_arm_at(Agent, X2, Y2))
  ]
).

% Low-level action to close the gripper
ll_action(ll_close_gripper(Agent),
  [ll_gripper(Agent, open)],
  [ll_gripper(Agent, close)],
  [],
  [agent(Agent)],
  [
    del(ll_gripper(Agent, open)),
    add(ll_gripper(Agent, close))
  ]
).

% Low-level action to open the gripper
ll_action(ll_open_gripper(Agent),
  [ll_gripper(Agent, close)],
  [ll_gripper(Agent, open)],
  [],
  [agent(Agent)],
  [
    del(ll_gripper(Agent, close)),
    add(ll_gripper(Agent, open))
  ]
).

%%%%%%%%%%%%%%%%%%%%%%%
% mappings
%%%%%%%%%%%%%%%%%%%%%%%
mapping(move_block_start(Agent, Block, X1, Y1, X2, Y2),
  [
    ll_move_arm_start(Agent, X1, Y1, X2, Y2),
    ll_move_arm_end(Agent, X1, Y1, X2, Y2),
    ll_close_gripper(Agent),
    ll_open_gripper(Agent)
  ]
).

mapping(move_block_to_top_start(Agent, Block1, Block2, X1, Y1, X2, Y2),
  [
    ll_move_arm_start(Agent, X1, Y1, X2, Y2),
    ll_move_arm_end(Agent, X1, Y1, X2, Y2),
    ll_close_gripper(Agent),
    ll_open_gripper(Agent)
  ]
).

mapping(move_top_to_table_start(Agent, Block1, Block2, X1, Y1, X2, Y2),
  [
    ll_move_arm_start(Agent, X1, Y1, X2, Y2),
    ll_move_arm_end(Agent, X1, Y1, X2, Y2),
    ll_close_gripper(Agent),
    ll_open_gripper(Agent)
  ]
).

mapping(move_top_to_top_start(Agent, Block1, Block2, Block3, X1, Y1, X2, Y2),
  [
    ll_move_arm_start(Agent, X1, Y1, X2, Y2),
    ll_move_arm_end(Agent, X1, Y1, X2, Y2),
    ll_close_gripper(Agent),
    ll_open_gripper(Agent)
  ]
).

mapping(place_architrave_start(Agent, Architrave, Pillar1, Pillar2, X1, Y1, X2, Y2),
  [
    ll_move_arm_start(Agent, X1, Y1, X2, Y2),
    ll_move_arm_end(Agent, X1, Y1, X2, Y2),
    ll_close_gripper(Agent),
    ll_open_gripper(Agent)
  ]
).
